# For better review this API, please download the swagger editor or copyt this yml into swagger
# online editor.

swagger: '2.0'
info:
  title: Login API
  description: Milieu Login API
  version: "1.0.0"
host: www.milieu.io
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      summary: Social Media Account Login
      description: |
        The social media account login with facebook, google etc.
      parameters:
        - name: login
          in: body
          description: The social media account using for access APIs
          schema:
            $ref: '#/definitions/Login'
          required: true
      responses:
        200:
          description: The user session token
          schema:
            $ref: '#/definitions/User_Session_Token'
        401:
          description: Facebook token verification error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
  /dev_sites:
    get:
      summary: List Dev Sites
      description: List all dev sites
      parameters:
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        200:
          description: The dev sites
          schema:
            type: object
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
  /dev_sites/{dev_site_id}/comments:
    get:
      summary: List comments in specific {dev_site_id} dev site
      description: |
        List all comments in specific {dev_site_id} dev site
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        200:
          description: List all comments belong to specific dev site
          schema:
            $ref: "#/definitions/Comment_List"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new comment in specific dev site
      description: |
        Create a new comment in specific dev site
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
        - name: comment
          in: body
          description: The comment body
          schema:
            $ref: '#/definitions/Create_Comment'
          required: true
      responses:
        200:
          description: Created a new comment
          schema:
            $ref: "#/definitions/Comment"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
  /dev_sites/{dev_site_id}/comments/{id}:
    get:
      summary: Read comment
      description: Return single comment
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Comment"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'

    patch:
      summary: Update comment
      description: Update a specific comment
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Comment"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update comment
      description: Update a specific comment
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Comment"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete comment
      description: Delete a specific comment
      parameters:
        - name: dev_site_id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: id
          in: path
          description: The ID of dev site
          type: integer
          required: true
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
      responses:
        204:
          description: Deleted
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
  /votes:
    post:
      summary: Create a vote
      description: |
        Create a vote in comment
      parameters:
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
        - name: vote
          in: body
          description: The vote body
          schema:
            $ref: '#/definitions/Vote_Body'
          required: true
      responses:
        200:
          description: Created a Vote
          schema:
            $ref: "#/definitions/Vote"
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'

  /votes/{id}:
    delete:
      summary: Delete a vote
      description: Delete a vote in comment
      parameters:
        - name: Authorization
          in: header
          description: The Authorization JWT returned from /login API
          type: string
          required: true
        - name: id
          in: path
          description: The ID of vote
          type: integer
          required: true
      responses:
        204:
          description: Deleted
        401:
          description: Not authorized. The JWT is invalid/expired
            or does not exist.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected server error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Login:
    type: object
    properties:
      token:
        type: string
        format: jwt
      provider:
        type: string
        format: facebook, google, twitter

  User_Session_Token:
    type: object
    properties:
      token:
        type: string
        format: jwt
        description: Unique user sesion token in JWT format
      expireTime:
        type: string
        format: epoch
        description: The Epoch time that token will expire
      otherUserInfo:
        type: string
        description: TDB

  Create_Comment:
    type: object
    properties:
      body:
        type: string
        description: The comment body

  Comment_List:
    type: array
    items:
      $ref: "#/definitions/Comment"

  Comment:
    properties:
      id:
        type: integer
      body:
        type: string
      created_at:
        type: string
      vote_count:
        type: integer
      user:
          $ref: '#/definitions/User_In_Comment'
      total:
        type: integer
      voted_down:
        type: boolean
      voted_up:
        type: boolean

  User_In_Comment:
    type: object
    properties:
      id:
        type: integer
      anonymous_comments:
        type: boolean
      name:
        type: string

  Vote_Body:
    type: object
    properties:
      comment_id:
        type: integer
      up:
        type: boolean

  Vote:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      comment_id:
        type: integer
      up:
        type: boolean

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      description:
        type: string
